.. _api:

CodeCarbon API
==============


CodeCarbon API
~~~~~~~~~~~~~~~~~~~~~~~~

.. warning::
    This mode use the CodeCarbon API to upload the timeseries of your emissions on a centralized server, with personal authentication and organizations management to share data in a secure way.

Before using it, you need to get an api token:

.. code-block:: console

    codecarbon login

It will redirect you to the dashboard authentication server, and save applicative credentials.
After that, you can configure codecarbon's local and remote behavior (config path, target API url, etc.)
.. code-block:: console

    codecarbon config


Then you can tell CodeCarbon to monitor your machine:

.. code-block:: console

    codecarbon monitor

Or use the API in your code. You can specify which project & token to use:

.. code-block:: python

    from codecarbon import track_emissions

    @track_emissions(
        project_id=<Your_project_id>,
        project_token=<Your_api_key>,
        save_to_api=True
    )
    def train_model():
        # GPU intensive training code  goes here

    if __name__ =="__main__":
        train_model()

More options could be specified in ``@track_emissions`` or in ``.codecarbon.config``

The `CodeCarbon dashboard <https://dashboard.codecarbon.io/>`_ use `CodeCarbon API <https://api.codecarbon.io/>`_ to get the data

The API do not have a nice web interface to create your own organization and project, you have to use `OpenAPI interface <https://api.codecarbon.io/docs>`_ for that.

And so on for your team, project and experiment.

You then have to set you experiment id in CodeCarbon, with two options:

In the code:

.. code-block:: python

    from codecarbon import track_emissions

    @track_emissions(
        measure_power_secs=30,
        api_call_interval=4,
        experiment_id="your experiment id",
        save_to_api=True,
    )
    def train_model():
        ...

Or in the config file `.codecarbon.config`:

.. code-block:: ini

    [codecarbon]
    experiment_id = your experiment id
    save_to_api = true
