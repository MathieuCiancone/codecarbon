services:
    carbonserver:
        depends_on:
            - postgres
        build:
            context: .
            dockerfile: ./carbonserver/docker/Dockerfile
        volumes:
            - ./carbonserver:/carbonserver
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ui.rule=Host(`localhost`)"
            - "traefik.http.routers.ui.entrypoints=websecure"
            - "traefik.http.routers.ui.tls.certresolver=myresolver"

        ports:
            - "8001:8001"
        environment:
            CODECARBON_LOG_LEVEL: DEBUG
            DATABASE_URL: postgresql://${DATABASE_USER:-codecarbon-user}:${DATABASE_PASS:-supersecret}@${DATABASE_HOST:-postgres}:${DATABASE_PORT:-5432}/${DATABASE_NAME:-codecarbon_db}
            FIEF_URL: http://inigoPC.local:8000
            FRONTEND_URL: http://localhost:3000
            FIEF_CLIENT_ID: AvjQENuVMr1uLXjRdexwQ0mLXtz2-YAIkkdTXQixlfU
            FIEF_CLIENT_SECRET: X3Xx3U9ag97fhsEMMCKYA4_0bgfyCbZoeQtcB27yxDI
        networks:
            - codecarbon_net

    postgres:
        container_name: ${DATABASE_HOST:-postgres_codecarbon}
        environment:
            HOSTNAME: ${DATABASE_HOST:-postgres_codecarbon}
            POSTGRES_DB: ${DATABASE_NAME:-codecarbon_db}
            POSTGRES_PASSWORD: ${DATABASE_PASS:-supersecret}
            POSTGRES_USER: ${DATABASE_USER:-codecarbon-user}
        image: postgres:13
        networks:
            - codecarbon_net
        ports:
            - 5480:5432
        restart: unless-stopped
        volumes:
            - postgres_codecarbon_data:/var/lib/postgresql/data:rw

    pgadmin:
        container_name: pgadmin_codecarbon
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-test@test.com}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-test}
        volumes:
            - pgadmin:/root/.pgadmin
            - ./carbonserver/docker/pgpassfile:/pgadmin4/pgpassfile
            - ./carbonserver/docker/pgadmin-servers.json:/pgadmin4/servers.json
        ports:
            - "${PGADMIN_PORT:-5080}:80"
        networks:
            - codecarbon_net
        restart: unless-stopped

    # Uncomment the following to enable prometheus and pushgateway
    # prometheus:
    #     image: prom/prometheus:latest
    #     ports:
    #         - "9090:9090"
    #     volumes:
    #         - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    #     depends_on:
    #         - "prometheus-pushgateway"

    # prometheus-pushgateway:
    #     image: prom/pushgateway
    #     ports:
    #         - "9091:9091"

    ###############################################
    # FIEF-related services
    ###############################################
    fief-server:
        image: ghcr.io/fief-dev/fief:latest
        command: fief run-server
        # command: sleep infinity
        env_file:
            - .env.fief
        depends_on:
            - postgres-fief
            - redis
        ports:
            - "8000:8000"
        labels:
            - "traefik.enable=true"
            # Set your domain name here
            - "traefik.http.routers.fief.rule=Host(`localhost`)"
            - "traefik.http.routers.fief.entrypoints=websecure"
            - "traefik.http.routers.fief.tls.certresolver=myresolver"

    fief-worker:
        image: ghcr.io/fief-dev/fief:latest
        command: fief run-worker -p 1 -t 1
        env_file:
            - .env.fief
        depends_on:
            - postgres-fief
            - redis

    postgres-fief:
        image: postgres:alpine
        environment:
            - POSTGRES_PASSWORD=111fief-password
            - POSTGRES_USER=fief
            - POSTGRES_DB=fief
        volumes:
            - postgres_fief_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ui.rule=Host(`localhost`)"
            - "traefik.http.routers.ui.entrypoints=websecure"
            - "traefik.http.routers.ui.tls.certresolver=myresolver"

    redis:
        image: redis:alpine
        command: redis-server --save 60 1 --loglevel warning
        volumes:
            - redis-data:/data

    traefik:
        image: "traefik:v2.11"
        container_name: "traefik"
        command:
            # Uncomment the lines below to debug and try with a self-signed certificate
            - "--log.level=DEBUG"
            - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
            # Set your email address here
            - "--certificatesresolvers.myresolver.acme.email=admin@mydomain.com"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
            - "443:443"
            - "8080:8080"
        volumes:
            - "letsencrypt-data:/letsencrypt"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

    ui:
        container_name: ui
        build:
            context: ./webapp
            dockerfile: dev.Dockerfile

        # Set environment variables based on the .env file
        env_file:
            - ./webapp/.env.development
        volumes:
            - ./webapp/src:/app/src
            - ./webapp/public:/app/public
        restart: always
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ui.rule=Host(`localhost`)"
            - "traefik.http.routers.ui.entrypoints=websecure"
            - "traefik.http.routers.ui.tls.certresolver=myresolver"
        ports:
            - "3000:3000"
        networks:
            - codecarbon_net

volumes:
    postgres_codecarbon_data:
        name: postgres_codecarbon_data
    pgadmin:
        name: pgadmin_codecarbon_data
    postgres_fief_data:
        name: postgres_fief_data
    redis-data:
        name: redis_data
    letsencrypt-data:
        name: letsencrypt_data

networks:
    codecarbon_net:
        name: codecarbon_network
